version: '3.9'

services:
  auth_api:
    build:
      context: ./Auth-API
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: auth_api
      DB_USER: root
      DB_PASS: senha
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./Auth-API:/var/www/html
    depends_on:
      - db
      - redis
    restart: always
    networks:
      - chatnet

  record_api:
    build:
      context: ./Record-API
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: senha
      MYSQL_DB: auth_api
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./Record-API:/app
    depends_on:
      - db
      - redis
    restart: always
    networks:
      - chatnet

  send_receive_api:
    build:
      context: ./sendReceiveApi/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      AUTH_API_ROUTE: http://auth_api:80
      RECORD_API_ROUTE: http://record_api:5000
      RABBITMQ_ROUTE: amqp://rabbitmq:5672
      REDIS_ROUTE: redis://redis:6379
    depends_on:
      - db
      - redis
      - auth_api
      - rabbitmq
    restart: always
    networks:
      - chatnet

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: auth_api
      MYSQL_ROOT_PASSWORD: senha
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - chatnet

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - chatnet

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"    
      - "15672:15672"  
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    restart: always
    networks:
      - chatnet

volumes:
  mysql_data:
  redis_data:
  rabbitmq-lib:
  rabbitmq-log:

networks:
  chatnet:
    driver: bridge
